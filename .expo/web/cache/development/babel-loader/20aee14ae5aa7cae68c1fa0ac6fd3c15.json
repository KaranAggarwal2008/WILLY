{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Karan\\\\Downloads\\\\Wireless_Library-main\\\\App.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport TransactionScreen from \"./screens/BookTransactionScreen\";\nimport SearchScreen from \"./screens/SearchScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppContainer, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar TabNavigator = createBottomTabNavigator({\n  Transaction: {\n    screen: TransactionScreen\n  },\n  Search: {\n    screen: SearchScreen\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      tabBarIcon: function tabBarIcon() {\n        var routeName = navigation.state.routeName;\n        console.log(routeName);\n\n        if (routeName === 'Transaction') {\n          return React.createElement(Image, {\n            source: require(\"./assets/book.png\"),\n            style: {\n              width: 40,\n              height: 40\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }\n          });\n        } else if (routeName === 'Search') {\n          return React.createElement(Image, {\n            source: require(\"./assets/searchingbook.png\"),\n            style: {\n              width: 40,\n              height: 40\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }\n          });\n        }\n      }\n    };\n  }\n});\nvar switchNavigator = createSwitchNavigator({\n  LoginScreen: {\n    screen: LoginScreen\n  },\n  TabNavigator: {\n    screen: TabNavigator\n  }\n});\nvar AppContainer = createAppContainer(switchNavigator);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Karan/Downloads/Wireless_Library-main/App.js"],"names":["React","createAppContainer","createSwitchNavigator","createBottomTabNavigator","TransactionScreen","SearchScreen","LoginScreen","App","styles","container","Component","TabNavigator","Transaction","screen","Search","defaultNavigationOptions","navigation","tabBarIcon","routeName","state","console","log","require","width","height","switchNavigator","AppContainer","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;AAeA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,kBAA1D;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AAEA,OAAOC,iBAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;;IAEqBC,G;;;;;;;;;;;;;WACnB,kBAAS;AACP,aAAO,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAH8BT,KAAK,CAACU,S;;SAAlBH,G;AAMrB,IAAMI,YAAY,GAAGR,wBAAwB,CAC3C;AACES,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAET;AAAV,GADf;AAEEU,EAAAA,MAAM,EAAE;AAAED,IAAAA,MAAM,EAAER;AAAV;AAFV,CAD2C,EAK3C;AACEU,EAAAA,wBAAwB,EAAE;AAAA,QAAGC,UAAH,QAAGA,UAAH;AAAA,WAAqB;AAC7CC,MAAAA,UAAU,EAAE,sBAAM;AAChB,YAAMC,SAAS,GAAGF,UAAU,CAACG,KAAX,CAAiBD,SAAnC;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,YAAIA,SAAS,KAAK,aAAlB,EAAiC;AAC/B,iBACE,oBAAC,KAAD;AACE,YAAA,MAAM,EAAEI,OAAO,qBADjB;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,EAAT;AAAaC,cAAAA,MAAM,EAAE;AAArB,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,SAPD,MAOO,IAAIN,SAAS,KAAK,QAAlB,EAA4B;AACjC,iBACE,oBAAC,KAAD;AACE,YAAA,MAAM,EAAEI,OAAO,8BADjB;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,EAAT;AAAaC,cAAAA,MAAM,EAAE;AAArB,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF;AAnB4C,KAArB;AAAA;AAD5B,CAL2C,CAA7C;AA0CA,IAAMC,eAAe,GAAGvB,qBAAqB,CAAC;AAC5CI,EAAAA,WAAW,EAAE;AAAEO,IAAAA,MAAM,EAAEP;AAAV,GAD+B;AAE5CK,EAAAA,YAAY,EAAE;AAAEE,IAAAA,MAAM,EAAEF;AAAV;AAF8B,CAAD,CAA7C;AAKA,IAAMe,YAAY,GAAGzB,kBAAkB,CAACwB,eAAD,CAAvC;AACA,IAAMjB,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;AAC/BnB,EAAAA,SAAS,EAAE;AACToB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,KAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["/*\n\nClass 75- Wireless library authentication\n\n\nGoals:\n● Create an authentication page for the user to authenticate. \n● Use firebase authentication service to authenticate a user. \n● Modify security rules in firebase database to allow only authenticated users to access database\n\n\n\n\n*/\n\nimport * as React from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport TransactionScreen from './screens/BookTransactionScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport LoginScreen from './screens/LoginScreen';\n\nexport default class App extends React.Component {\n  render() {\n    return <AppContainer style={styles.container} />;\n  }\n}\n\nconst TabNavigator = createBottomTabNavigator(\n  {\n    Transaction: { screen: TransactionScreen },\n    Search: { screen: SearchScreen },\n  },\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      tabBarIcon: () => {\n        const routeName = navigation.state.routeName;\n        console.log(routeName);\n        if (routeName === 'Transaction') {\n          return (\n            <Image\n              source={require('./assets/book.png')}\n              style={{ width: 40, height: 40 }}\n            />\n          );\n        } else if (routeName === 'Search') {\n          return (\n            <Image\n              source={require('./assets/searchingbook.png')}\n              style={{ width: 40, height: 40 }}\n            />\n          );\n        }\n      },\n    }),\n  }\n);\n\n/* \nWe are using TabNavigation in our app.\nHowever, we do not want the login screen as a tab in our application. \nThis should be the first screen which users see by entering emailID,\n password and hitting the login button.\n\n\nWe are going to create a SwitchNavigator which will contain both\n- the login page and the TabNavigator - we had created earlier. \n\n*/\n\nconst switchNavigator = createSwitchNavigator({\n  LoginScreen: { screen: LoginScreen },\n  TabNavigator: { screen: TabNavigator },\n});\n\nconst AppContainer = createAppContainer(switchNavigator);\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}